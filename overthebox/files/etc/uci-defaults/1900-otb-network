#!/bin/sh
# shellcheck disable=SC1091,SC2039
# vim: set noexpandtab tabstop=4 shiftwidth=4 softtabstop=4 :

. /lib/functions.sh

[ "$(uci -q get "network.lan.ipaddr ")" = '192.168.100.1' ] || \
	uci -q batch <<-EOF
	set network.lan=interface
	set network.lan.type=bridge
	set network.lan.proto=static
	set network.lan.ipaddr=192.168.100.1
	set network.lan.netmask=255.255.255.0
	set network.lan.ipv6=0
    set network.lan.multipath=off

	set network.lan.ifname=eth0
	set system.@system[0].hostname=OverTheBox
	EOF


uci -q batch <<EOF
delete network.none
delete network.if6rd
reorder network.loopback=0
reorder network.globals=1
reorder network.lan=2
set network.globals.multipath=enable
EOF

# Delete tun0 and xtun0 and let the configure get the right configuration
uci -q batch <<EOF
delete network.tun0
delete network.xtun0
EOF

# Set the ip rule for the lan with a pref of 100
uci -q show network.lan_rule >/dev/null || \
	uci -q batch <<-EOF
	set network.lan.ip4table='lan'
	set network.lan_rule=rule
	set network.lan_rule.lookup=lan
	set network.lan_rule.priority=100
	EOF

# Add the lan as a named routing table
if ! grep -s -q "lan" /etc/iproute2/rt_tables; then
	echo "50 lan" >> /etc/iproute2/rt_tables
fi

if [ "$(uci -q get network.vpn0.proto)" = "none" ]; then
	uci -q delete network.vpn0
fi

_setup_multipath() {
	uci -q get "network.$1.multipath" >/dev/null && return
	uci -q set "network.$1.multipath=$2"
}

_setup_dhcp() {
	uci -q get "network.$1.ipaddr" >/dev/null && return
	uci -q set "network.$1.proto=dhcp"
}

_setup() {
	# Disable ipv6 on all interfaces
	uci -q set "network.$1.ipv6=0"
	echo "I executed _setup from 1900" >> /usr/1900_interface_$1.txt
	
	case "$1" in
	wan?*)
		echo "I executed batch of $1 onto firewall" >> /usr/1900-executed_wan.txt
		uci -q batch <<-EOF
		set network.$1.metric=${1#wan}
		set network.$1.ip4table=$((200+${1#wan}))
		del_list firewall.wan.network=$1
		add_list firewall.wan.network=$1
		EOF
		_setup_multipath "$1" on
		_setup_dhcp "$1"
		;;
	*)
		_setup_multipath "$1" off
		;;
	esac
}
config_load network
config_foreach _setup interface